<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>post.lxd.me</title>
   
   <link>https://post.lxd.me/</link>
   <description></description>
   <language>en-uk</language>
   <managingEditor>  </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>用OSX的say命令让Nagios报警叫出来</title>
	  <link>//using-osx-say-command-to-make-nagios-alert-speak</link>
	  <author> </author>
	  <pubDate>2014-09-04T20:34:56+08:00</pubDate>
	  <guid>//using-osx-say-command-to-make-nagios-alert-speak</guid>
	  <description><![CDATA[
	     <p>Mac OSX系统有个有趣的命令<code class="highlighter-rouge">say</code>，传入一段文本就可以让系统读出来。比如你可以打开OSX的Terminal.app，然后输入<code class="highlighter-rouge">say hello OSX</code>，听听会不会响。</p>

<p>因为机缘巧合，我们项目的CI服务器装在一台Mac Pro上了，在写脚本监控CI Server进程或者做CI monitor的报警的时候，就可以用这个<code class="highlighter-rouge">say</code>命令把一些信息读出来，再在Mac上插个大喇叭，这样整个项目组都能听得见了。</p>

<p>比如：<code class="highlighter-rouge">say Go server went down, no dzuo no die, ha ha ha ha ha</code></p>

<p>当然这样还不够完美，<code class="highlighter-rouge">say</code>命令只能在Mac上写脚本的时候可以用，于是我们可以写一个HTTP Server，把<code class="highlighter-rouge">say</code>命令包装一下，放在Mac Pro上跑起来，代码可以是这个样子的：</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'http'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">exec</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'child_process'</span><span class="p">).</span><span class="nx">exec</span><span class="p">;</span> 

<span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">body</span> <span class="o">=</span> <span class="s2">""</span><span class="p">;</span>
	<span class="nx">req</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'data'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">chunk</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">body</span> <span class="o">+=</span> <span class="nx">chunk</span><span class="p">;</span>
	<span class="p">});</span>
	<span class="nx">req</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'end'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
		<span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
		<span class="nx">exec</span><span class="p">(</span><span class="s1">'say '</span> <span class="o">+</span> <span class="nx">body</span><span class="p">);</span>
	<span class="p">});</span>
<span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">7788</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'http say now listen on 7788'</span><span class="p">);</span></code></pre></figure>

<p>然后我们在别的机器上，POST数据到这台Mac，这台Mac就可以念出来了，比如这样：<code class="highlighter-rouge">curl -X POST -d "No dzuo no die" &lt;MAC_IP_addr&gt;:7788</code></p>

<p>Nagios的报警缺省是发邮件的，很不方便，那么就可以tweak一下Nagios发邮件的配置，让它把消息文本POST到Mac上去念出来，config的配置修改是这样的：</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c"># From</span>
<span class="n">define</span> <span class="n">command</span><span class="p">{</span>
        <span class="n">command_name</span>    <span class="n">notify</span><span class="o">-</span><span class="n">service</span><span class="o">-</span><span class="n">by</span><span class="o">-</span><span class="n">email</span>
        <span class="n">command_line</span>    <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">printf</span> <span class="s">"</span><span class="si">%</span><span class="s">b"</span> <span class="s">"***** Icinga *****</span><span class="se">\n\n</span><span class="s">Notification Type: $NOTIFICATIONTYPE$</span><span class="se">\n\n</span><span class="s">Service: $SERVICEDESC$</span><span class="se">\n</span><span class="s">Host: $HOSTALIAS$</span><span class="se">\n</span><span class="s">Address: $HOSTADDRESS$</span><span class="se">\n</span><span class="s">State: $SERVICESTATE$</span><span class="se">\n\n</span><span class="s">Date/Time: $LONGDATETIME$</span><span class="se">\n\n</span><span class="s">Additional Info:</span><span class="se">\n\n</span><span class="s">$SERVICEOUTPUT$</span><span class="se">\n</span><span class="s">"</span> <span class="o">|</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">mail</span> <span class="o">-</span><span class="n">s</span> <span class="s">"** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **"</span> <span class="err">$</span><span class="n">CONTACTEMAIL</span><span class="err">$</span>
<span class="p">}</span>

<span class="c"># To</span>
<span class="n">define</span> <span class="n">command</span><span class="p">{</span>
        <span class="n">command_name</span>    <span class="n">notify</span><span class="o">-</span><span class="n">service</span><span class="o">-</span><span class="n">by</span><span class="o">-</span><span class="n">http</span><span class="o">-</span><span class="n">say</span>
        <span class="n">command_line</span>    <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">printf</span> <span class="s">"</span><span class="si">%</span><span class="s">b"</span> <span class="s">"$NOTIFICATIONTYPE$, $SERVICEDESC$ on Host $HOSTALIAS$. $SERVICEOUTPUT$"</span> <span class="o">|</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">curl</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span> <span class="err">@</span><span class="o">-</span> <span class="mf">10.18</span><span class="o">.</span><span class="mf">7.153</span><span class="p">:</span><span class="mi">7788</span>
<span class="p">}</span></code></pre></figure>

<p>curl的<code class="highlighter-rouge">-d</code>开关的值<code class="highlighter-rouge">@-</code>是让curl从标准输入读数据。</p>

<p>一点奇技淫巧，自娱自乐一下 :)</p>

	  ]]></description>
	</item>


</channel>
</rss>
